# Generated by Django 5.1.4 on 2024-12-12 22:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('iso3', models.CharField(max_length=3, unique=True)),
                ('nationality', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('info', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('file_extension', models.CharField(max_length=10)),
                ('type', models.CharField(choices=[('url', 'URL'), ('base64', 'Base64')], default='url', max_length=10)),
                ('content', models.TextField()),
                ('info', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('pf', 'Pessoa Física'), ('pj', 'Pessoa Jurídica')], max_length=50)),
                ('info', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Entity',
                'verbose_name_plural': 'Entities',
                'db_table': 'entity',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Event Type',
                'verbose_name_plural': 'Events Type',
                'db_table': 'event_type',
            },
        ),
        migrations.CreateModel(
            name='FinancialInstitution',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('info', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Financial Institution',
                'verbose_name_plural': 'Financial Institutions',
                'db_table': 'financial_institution',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data', models.JSONField()),
                ('table_name', models.CharField(max_length=255)),
                ('change_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('change_type', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Log',
                'db_table': '_log',
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('info', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolio',
                'db_table': 'portfolio',
            },
        ),
        migrations.CreateModel(
            name='RoutineLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('info', models.JSONField(null=True)),
            ],
            options={
                'verbose_name': 'Routine Log',
                'verbose_name_plural': 'Routine Log',
                'db_table': 'routine_log',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('info', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('branch', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.CharField(max_length=255)),
                ('info', models.JSONField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.country')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.currency')),
                ('financial_institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.financialinstitution')),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'bank_account',
                'unique_together': {('financial_institution', 'currency', 'branch', 'number', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.JSONField(null=True)),
                ('upload_url', models.CharField(max_length=2048, null=True)),
                ('last_update_at', models.DateTimeField(auto_now=True)),
                ('bank_accounts', models.ManyToManyField(to='common.bankaccount')),
                ('entities', models.ManyToManyField(related_name='entities', to='common.entity')),
                ('officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='officer_contracts', to='common.entity')),
                ('witnesses', models.ManyToManyField(related_name='witnesses', to='common.entity')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
                'db_table': 'contract',
            },
        ),
        migrations.CreateModel(
            name='FinancialInstitutionTrade',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('info', models.JSONField(blank=True, null=True)),
                ('financial_institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.financialinstitution')),
            ],
            options={
                'verbose_name': 'Financial Institution Trade',
                'verbose_name_plural': 'Financial Institution Trades',
                'db_table': 'financial_institution_trade',
            },
        ),
        migrations.CreateModel(
            name='FinancialInstrument',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ticker', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('bank_account', 'Bank Account'), ('fund', 'Fund'), ('cri', 'CRI'), ('cra', 'CRA'), ('debenture', 'Debênture')], max_length=50)),
                ('info', models.JSONField(blank=True, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.currency')),
            ],
            options={
                'verbose_name': 'Financial Instrument',
                'verbose_name_plural': 'Financial Instruments',
                'db_table': 'financial_instrument',
                'unique_together': {('ticker', 'name', 'type', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('declaration_date', models.DateField(blank=True, null=True)),
                ('ex_date', models.DateField()),
                ('record_date', models.DateField(blank=True, null=True)),
                ('pay_date', models.DateField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('factor', models.FloatField(blank=True, null=True)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.eventtype')),
                ('financial_instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.financialinstrument')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='IndustryClassification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('field', models.CharField(max_length=255)),
                ('id_father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.industryclassification')),
            ],
            options={
                'verbose_name': 'Industry Classification',
                'verbose_name_plural': 'Industry Classification',
                'db_table': 'industry_classification',
            },
        ),
        migrations.CreateModel(
            name='EntityBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.JSONField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.bankaccount')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.entity')),
            ],
            options={
                'verbose_name': 'Entity <->  Bank Account',
                'verbose_name_plural': 'Entity <->  Bank Account',
                'db_table': 'entity_bank_account',
                'unique_together': {('entity', 'bank_account')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.JSONField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.bankaccount')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.portfolio')),
            ],
            options={
                'verbose_name': 'Portfolio <->  Bank Account',
                'verbose_name_plural': 'Portfolio <->  Bank Account',
                'db_table': 'portfolio_bank_account',
                'unique_together': {('portfolio', 'bank_account')},
            },
        ),
        migrations.CreateModel(
            name='QuoteClose',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.DecimalField(decimal_places=20, max_digits=40)),
                ('source', models.CharField(default='maud', max_length=32)),
                ('financial_instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.financialinstrument')),
            ],
            options={
                'verbose_name': 'Quote Close',
                'verbose_name_plural': 'Quote Close',
                'db_table': 'quote_close',
                'unique_together': {('financial_instrument', 'date', 'source')},
            },
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.document')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.tag')),
            ],
            options={
                'verbose_name': 'Document Tag',
                'verbose_name_plural': 'Document Tags',
                'db_table': 'document_tag',
                'unique_together': {('document', 'tag')},
            },
        ),
    ]
